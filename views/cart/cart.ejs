<%- include('../partials/header') %>
<%- include('../partials/navbar') %>
<%- include('../partials/flash') %>

<section class="container">
  <h1 class="display-6 mt-5">MY CART</h1>

  <div class="row">
    <div class="col-lg-8">
      <% for (let item of user.cart) { %>
        <% if (item.product) { %> <!-- Check if product exists -->
          <div class="card mx-auto m-3 border" style="max-width: 500px">
            <div class="row g-0">
              <div class="col-4">
                <img class="img-fluid rounded-start" src="<%= item.product.img %>" alt="<%= item.product.name %>" />
              </div>
              <div class="col-8">
                <div class="card-body">
                  <h5 class="card-title"><%= item.product.name %></h5>
                  <p class="card-text"><%= item.product.desc %></p>
                  <form
                    class="d-inline-block"
                    action="/user/<%= item.product._id %>?_method=DELETE"
                    method="POST"
                  >
                    <button class="btn btn-danger btn-sm">Delete</button> <br><br>
                  </form>
                  <div class="row">
                    <div class="col-lg-6">
                      <div class="input-group">
                        <span class="input-group-btn">
                          <button type="button" class="quantity-left-minus btn btn-danger btn-number" data-item-id="<%= item.product._id %>">
                            <i class="fa-solid fa-minus"></i>
                          </button>
                        </span>
                        <input type="number" id="quantity-<%= item.product._id %>" name="quantity" class="form-control input-number" value="<%= item.quantity %>" min="1" max="100">
                        <span class="input-group-btn">
                          <button type="button" class="quantity-right-plus btn btn-success btn-number" data-item-id="<%= item.product._id %>">
                            <i class="fa-solid fa-plus"></i>
                          </button>
                        </span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        <% } else { %>
          <div class="card mx-auto m-3 border" style="max-width: 500px">
            <div class="card-body">
              <h5 class="card-title">Product details not available</h5>
            </div>
          </div>
        <% } %>
      <% } %>
    </div>
    <div class="col-lg-4">
      <ul id="cart-summary">
        <% for (let item of user.cart) { %>
          <% if (item.product) { %>
            <li>
              <span>
                <%= item.product.name %> (Quantity: <span id="display-quantity-<%= item.product._id %>"><%= item.quantity %></span>)
                â€” <i class="fa-solid fa-indian-rupee-sign"></i> <%= item.product.price %> (Each)
              </span>
            </li>
          <% } %>
        <% } %>
        <li>Total Amount: <i class="fa-solid fa-indian-rupee-sign"></i> <span id="total-amount"><%= totalAmount.toFixed(2) %></span></li>
      </ul>      
      <a href="/checkout/<%= user._id %>"><button class="btn btn-sm btn-success">Checkout</button></a>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const quantityInputs = document.querySelectorAll('.input-number');

    quantityInputs.forEach((input) => {
      const plusButton = input.nextElementSibling.querySelector('.quantity-right-plus');
      const minusButton = input.previousElementSibling.querySelector('.quantity-left-minus');
      const itemId = input.id.split('-')[1]; // Get the item ID from the input ID

      plusButton.addEventListener('click', async function (e) {
        e.preventDefault();
        const currentQuantity = parseInt(input.value);
        const response = await fetch(`/user/${itemId}/increment`, { method: 'POST' });
        if (response.ok) {
          const { quantity } = await response.json();
          input.value = quantity;
          updateQuantity(itemId, input.value); // Update the displayed quantity
          updateTotalAmount(); // Update total amount after quantity change
        } else {
          console.error('Failed to increment quantity:', response.statusText);
        }
      });

      minusButton.addEventListener('click', async function (e) {
        e.preventDefault();
        const currentQuantity = parseInt(input.value);
        if (currentQuantity > 1) {
          const response = await fetch(`/user/${itemId}/decrement`, { method: 'POST' });
          if (response.ok) {
            const { quantity } = await response.json();
            input.value = quantity;
            updateQuantity(itemId, input.value); // Update the displayed quantity
            updateTotalAmount(); // Update total amount after quantity change
          } else {
            console.error('Failed to decrement quantity:', response.statusText);
          }
        }
      });

      input.addEventListener('change', async function (e) {
        const newQuantity = parseInt(e.target.value);
        if (!isNaN(newQuantity) && newQuantity >= 1) {
          const response = await fetch(`/user/${itemId}/updateQuantity`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ quantity: newQuantity })
          });
          if (response.ok) {
            const { quantity } = await response.json();
            input.value = quantity;
            updateQuantity(itemId, input.value); // Update the displayed quantity
            updateTotalAmount(); // Update total amount after quantity change
          } else {
            console.error('Failed to update quantity:', response.statusText);
          }
        } else {
          console.error('Invalid quantity input');
          input.value = 1; // Reset to 1 if invalid input
        }
      });
    });

    function updateQuantity(itemId, value) {
      const displayQuantity = document.getElementById(`display-quantity-${itemId}`);
      if (displayQuantity) {
        displayQuantity.textContent = value;
      }
    }

    async function updateTotalAmount() {
  try {
    const response = await fetch('/user/cart/totalAmount');
    if (response.ok) {
      const { totalAmount } = await response.json();
      const totalAmountElement = document.getElementById('total-amount');
      if (totalAmountElement) {
        totalAmountElement.textContent = totalAmount.toFixed(2); // Update total amount in the DOM
      }
    } else {
      console.error('Failed to fetch total amount:', response.statusText);
    }
  } catch (error) {
    console.error('Error updating total amount:', error);
  }
}
  });
</script>




<%- include('../partials/footer') %>
